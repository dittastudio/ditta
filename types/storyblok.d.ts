// This file was generated by the storyblok CLI.
// DO NOT MODIFY THIS FILE BY HAND.
import type { ISbStoryData } from "storyblok";
export interface BlockCareersStoryblok {
  background_color?: number | string;
  text_color?: number | string;
  headline?: string;
  items?: CareerItemStoryblok[];
  component: "block_careers";
  _uid: string;
  [k: string]: any;
}

export type MultilinkStoryblok =
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      anchor?: string;
      rel?: string;
      title?: string;
      prep?: string;
      linktype: "story";
      story?: {
        name: string;
        created_at?: string;
        published_at?: string;
        id: number;
        uuid: string;
        content?: {
          [k: string]: any;
        };
        slug: string;
        full_slug: string;
        sort_by_date?: null | string;
        position?: number;
        tag_list?: string[];
        is_startpage?: boolean;
        parent_id?: null | number;
        meta_data?: null | {
          [k: string]: any;
        };
        group_id?: string;
        first_published_at?: string;
        release_id?: null | number;
        lang?: string;
        path?: null | string;
        alternates?: any[];
        default_full_slug?: null | string;
        translated_slugs?: null | any[];
        [k: string]: any;
      };
      [k: string]: any;
    }
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      linktype: "url";
      rel?: string;
      title?: string;
      [k: string]: any;
    }
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      email?: string;
      linktype: "email";
      [k: string]: any;
    }
  | {
      fieldtype: "multilink";
      id: string;
      url: string;
      cached_url: string;
      target?: "_blank" | "_self";
      linktype: "asset";
      [k: string]: any;
    };

export interface BlockCarouselStoryblok {
  title?: string;
  link?: Exclude<MultilinkStoryblok, {linktype?: "email"} | {linktype?: "asset"}>;
  autoplay?: boolean;
  slides: (SlideSplitStoryblok | SlideImagesStoryblok | SlideVideoStoryblok)[];
  component: "block_carousel";
  _uid: string;
  [k: string]: any;
}

export interface AssetStoryblok {
  alt: string | null;
  copyright?: string | null;
  fieldtype: "asset";
  id: number;
  filename: string | null;
  name: string;
  title: string | null;
  focus: string | null;
  meta_data?: {
    [k: string]: any;
  };
  source?: string | null;
  is_external_url?: boolean;
  is_private?: boolean;
  src?: string;
  updated_at?: string;
  width?: number | null;
  height?: number | null;
  aspect_ratio?: number | null;
  public_id?: string | null;
  content_type?: string;
  [k: string]: any;
}

export interface BlockImageStoryblok {
  media: AssetStoryblok;
  ratio: number | string;
  ratio_desktop: number | string;
  component: "block_image";
  _uid: string;
  [k: string]: any;
}

export interface RichtextStoryblok {
  type: string;
  content?: RichtextStoryblok[];
  marks?: RichtextStoryblok[];
  attrs?: any;
  text?: string;
  [k: string]: any;
}

export interface BlockSplitStoryblok {
  content?: (SplitCarouselStoryblok | SplitMediaStoryblok)[];
  headline?: string;
  text: RichtextStoryblok;
  ratio?: number | string;
  ratio_desktop?: number | string;
  link?: LinkStoryblok[];
  reverse?: boolean;
  background_color?: number | string;
  text_color?: number | string;
  component: "block_split";
  _uid: string;
  [k: string]: any;
}

export interface BlockTextStoryblok {
  headline?: string;
  text_size: number | string;
  text: RichtextStoryblok;
  link?: LinkStoryblok[];
  background_color?: number | string;
  text_color?: number | string;
  component: "block_text";
  _uid: string;
  [k: string]: any;
}

export interface BlockVideoStoryblok {
  poster: AssetStoryblok;
  video_mobile: AssetStoryblok;
  ratio_mobile: number | string;
  video_desktop?: AssetStoryblok;
  ratio_desktop: number | string;
  component: "block_video";
  _uid: string;
  [k: string]: any;
}

export interface CareerItemStoryblok {
  role: string;
  company: string;
  pdf: AssetStoryblok;
  email: string;
  component: "career_item";
  _uid: string;
  [k: string]: any;
}

export interface HeroCarouselStoryblok {
  autoplay?: boolean;
  slides?: (SlideImagesStoryblok | SlideVideoStoryblok)[];
  component: "hero_carousel";
  _uid: string;
  [k: string]: any;
}

export interface HeroImageStoryblok {
  media: AssetStoryblok;
  component: "hero_image";
  _uid: string;
  [k: string]: any;
}

export interface LinkStoryblok {
  title: string;
  link: Exclude<MultilinkStoryblok, {linktype?: "asset"}>;
  component: "link";
  _uid: string;
  [k: string]: any;
}

export interface PageStoryblok {
  hero?: (HeroImageStoryblok | HeroCarouselStoryblok)[];
  blocks?: (
    | BlockCareersStoryblok
    | BlockCarouselStoryblok
    | BlockImageStoryblok
    | BlockSplitStoryblok
    | BlockTextStoryblok
    | BlockVideoStoryblok
  )[];
  seo_title: string;
  seo_description: string;
  seo_image: AssetStoryblok;
  component: "page";
  _uid: string;
  [k: string]: any;
}

export interface SettingsStoryblok {
  navigation_primary?: LinkStoryblok[];
  navigation_secondary?: LinkStoryblok[];
  footer_navigation?: LinkStoryblok[];
  studio_title?: string;
  studio?: RichtextStoryblok;
  places_title?: string;
  places?: RichtextStoryblok;
  contact_title?: string;
  contact?: RichtextStoryblok;
  component: "settings";
  _uid: string;
  [k: string]: any;
}

export type MultiassetStoryblok = {
  alt: string | null;
  copyright?: string | null;
  fieldtype: "asset";
  id: number;
  filename: string | null;
  name: string;
  title: string | null;
  focus: string | null;
  meta_data?: {
    [k: string]: any;
  };
  source?: string | null;
  is_external_url?: boolean;
  is_private?: boolean;
  src?: string;
  updated_at?: string;
  width?: number | null;
  height?: number | null;
  aspect_ratio?: number | null;
  public_id?: string | null;
  content_type?: string;
  [k: string]: any;
}[];

export interface SlideImagesStoryblok {
  images?: MultiassetStoryblok;
  component: "slide_images";
  _uid: string;
  [k: string]: any;
}

export interface SlideSplitStoryblok {
  background_color?: number | string;
  text_color?: number | string;
  media?: AssetStoryblok;
  headline?: string;
  text: RichtextStoryblok;
  reverse?: boolean;
  alignment_mobile?: "" | "top" | "bottom";
  component: "slide_split";
  _uid: string;
  [k: string]: any;
}

export interface SlideVideoStoryblok {
  poster: AssetStoryblok;
  video_mobile: AssetStoryblok;
  video_desktop?: AssetStoryblok;
  component: "slide_video";
  _uid: string;
  [k: string]: any;
}

export interface SplitCarouselStoryblok {
  autoplay?: boolean;
  slides?: SlideImagesStoryblok[];
  component: "split_carousel";
  _uid: string;
  [k: string]: any;
}

export interface SplitMediaStoryblok {
  media?: AssetStoryblok;
  component: "split_media";
  _uid: string;
  [k: string]: any;
}
